@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Newtonsoft.Json

<div class="sidebar">
    <div class="toolbar">
        <span class="navbar-brand">Tags</span>
        <!-- TODO Wird eigentlich nicht benötigt, wenn wir die Tags über dieses Tag-Control machen, oder? -->
        <!-- <ul class="nav navbar-nav navbar-right">
            <li><a href="#"><span class="glyphicon glyphicon-plus"></span></a></li>
            <li><a href="#"><span class="glyphicon glyphicon-edit"></span></a></li>
        </ul> -->
    </div>

    <ul class="sidebar-list">
        <li><a href="/bookmarks">All Bookmarks</a></li>
        
        @{
            
            var bookmarksRootAlias = "bookmarks";
            var memberIdAlias = "memberId";
            var tagsAlias = "tags";

            var cs = ApplicationContext.Services.ContentService;
            var rootNodes = cs.GetRootContent();
            var bookmarks = rootNodes.Where(x => x.ContentType.Alias == bookmarksRootAlias).First();
            var userBookmarks = bookmarks.Children().Where(x => x.GetValue
            <int>
                (memberIdAlias) == Members.GetCurrentMemberId()).First();
@*
    var tagList = new List<string>();

    foreach (var bookmark in userBookmarks.Children())
    {
        var tagsString = bookmark.GetValue<string>(tagsAlias);
        string[] bookmarkTagList = tagsString.Split(new Char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);

        if (bookmarkTagList != null && bookmarkTagList.Length > 0)
        {
            foreach (var tag in bookmarkTagList)
            {
                if (!tagList.Contains(tag))
                {
                    tagList.Add(tag);
                }
            }
        }
    }

    tagList.Sort();

    foreach (var tag in tagList)
    {
        <li><a href="#">@tag</a></li>
    }
*@

            dynamic tagList = JsonConvert.DeserializeObject(userBookmarks.GetValue<string>(tagsAlias).Replace("&quot;", "\""));
            foreach(var listItem in tagList.tags) {
                <li><a href="#">@listItem.title</a></li>
            }
        }
</ul>
</div>
